program SistemInformasiRumahSakit

kamus
    const MAX_DATA : integer = 100
    
    type Pasien : <
        id : string,
        nama : string,
        umur : integer,
        gender : string
    >
    
    type Dokter : <
        id : string,
        nama : string,
        spesialisasi : string,
        gender : string,
        jadwal : string
    >
    
    type Riwayat : <
        id : string,
        pasienID : string,
        dokterID : string,
        tanggal : string,
        diagnosa : string
    >
    
    daftarPasien : array[0..MAX_DATA-1] of Pasien
    daftarDokter : array[0..MAX_DATA-1] of Dokter
    daftarRiwayat : array[0..MAX_DATA-1] of Riwayat
    jumlahPasien : integer
    jumlahDokter : integer
    jumlahRiwayat : integer
    pilihan : integer
    id_cari : string

algoritma
    // Inisialisasi data contoh
    jumlahPasien <- 4
    daftarPasien[0] <- {"P001", "Assyifa Dwi Safitri", 35, "P"}
    daftarPasien[1] <- {"P002", "Amirah Essary Yunsarah Sujuthi", 28, "P"}
    daftarPasien[2] <- {"P003", "Keisha Hananta", 45, "P"}
    daftarPasien[3] <- {"P004", "Dit Adit", 20, "L"}
    
    jumlahDokter <- 5
    daftarDokter[0] <- {"D001", "Dr. Ahmad", "Kardiologi", "L", "Senin-Jumat, 08.00-12.00"}
    daftarDokter[1] <- {"D002", "Dr. Budi", "Kedokteran Umum", "L", "Senin-Jumat, 13.00-17.00"}
    daftarDokter[2] <- {"D003", "Dr. Candra", "Kedokteran Gigi", "L", "Senin-Jumat, 08.00-12.00"}
    daftarDokter[3] <- {"D004", "Dr. Dwi", "Kedokteran Gigi", "P", "Senin-Jumat, 13.00-17.00"}
    daftarDokter[4] <- {"D005", "Dr. Eka", "Kedokteran Mata", "P", "Senin-Jumat, 08.00-12.00"}
    
    jumlahRiwayat <- 5
    daftarRiwayat[0] <- {"R001", "P001", "D001", "2023-07-01", "Cephalgia"}
    daftarRiwayat[1] <- {"R002", "P002", "D002", "2023-07-02", "Nausea"}
    daftarRiwayat[2] <- {"R003", "P003", "D003", "2023-07-03", "Odontalgia"}
    daftarRiwayat[3] <- {"R004", "P004", "D004", "2023-07-04", "Karies Gigi"}
    daftarRiwayat[4] <- {"R005", "P001", "D005", "2023-07-05", "Miopia"}

    // Menu utama
    loop
        output("\n=== SISTEM INFORMASI RUMAH SAKIT ===")
        output("1. Kelola Data Pasien")
        output("2. Kelola Data Dokter")
        output("3. Kelola Data Riwayat")
        output("4. Keluar")
        output("Pilih menu (1-4): ")
        input(pilihan)

        switch pilihan
            case 1:
                menuPasien()
            case 2:
                menuDokter()
            case 3:
                menuRiwayat()
            case 4:
                output("Terima kasih telah menggunakan sistem ini.")
                exit program
            default:
                output("Pilihan tidak valid! Silakan pilih 1-4.")
        endswitch
    endloop

fungsi menuPasien()
kamus
    pilihan_pasien : integer
    id_pasien_cari : string
algoritma
    loop
        output("\n=== MENU PASIEN ===")
        output("1. Tampilkan Semua Pasien")
        output("2. Tambah Pasien Baru")
        output("3. Edit Data Pasien")
        output("4. Hapus Data Pasien")
        output("5. Urutkan Pasien Berdasarkan Umur (Selection Sort)")
        output("6. Urutkan Pasien Berdasarkan Nama (Insertion Sort)")
        output("7. Cari Pasien Berdasarkan ID")
        output("8. Kembali ke Menu Utama")
        output("Pilih menu (1-8): ")
        input(pilihan_pasien)

        switch pilihan_pasien
            case 1:
                tampilkanPasien()
            case 2:
                tambahPasien()
            case 3:
                editPasien()
            case 4:
                hapusPasien()
            case 5:
                urutkanPasienByUmur()
                tampilkanPasien()
            case 6:
                urutkanPasienByNama()
                tampilkanPasien()
            case 7:
                output("Masukkan ID Pasien: ")
                input(id_pasien_cari)
                cariPasienById(id_pasien_cari)
            case 8:
                return
            default:
                output("Pilihan tidak valid! Silakan pilih 1-8.")
        endswitch
    endloop

fungsi tampilkanPasien()
algoritma
    output("\nDaftar Pasien:")
    output("==========================================")
    output("ID    Nama                      Umur Gender")
    output("==========================================")
    untuk i dari 0 hingga jumlahPasien-1
        output(daftarPasien[i].id, " ", daftarPasien[i].nama, " ", daftarPasien[i].umur, " ", daftarPasien[i].gender)
    endfor

fungsi tambahPasien()
kamus
    pasien_baru : Pasien
algoritma
    jika jumlahPasien >= MAX_DATA maka
        output("Kapasitas pasien penuh!")
        return
    endif
    
    output("\nTambah Pasien Baru")
    output("ID Pasien: ")
    input(pasien_baru.id)
    output("Nama Pasien: ")
    input(pasien_baru.nama)
    output("Umur Pasien: ")
    input(pasien_baru.umur)
    output("Gender (L/P): ")
    input(pasien_baru.gender)

    daftarPasien[jumlahPasien] <- pasien_baru
    jumlahPasien <- jumlahPasien + 1
    output("Pasien berhasil ditambahkan!")

fungsi editPasien()
kamus
    id_edit : string
    ditemukan : boolean
    i : integer
algoritma
    output("Masukkan ID Pasien yang akan diedit: ")
    input(id_edit)

    ditemukan <- false
    i <- 0
    selama i < jumlahPasien dan tidak ditemukan
        jika daftarPasien[i].id = id_edit maka
            output("\nData Pasien Ditemukan:")
            output("ID    Nama                      Umur Gender")
            output(daftarPasien[i].id, " ", daftarPasien[i].nama, " ", daftarPasien[i].umur, " ", daftarPasien[i].gender)

            output("\nMasukkan data baru:")
            output("Nama Pasien: ")
            input(daftarPasien[i].nama)
            output("Umur Pasien: ")
            input(daftarPasien[i].umur)
            output("Gender (L/P): ")
            input(daftarPasien[i].gender)

            output("Data pasien berhasil diperbarui!")
            ditemukan <- true
        endif
        i <- i + 1
    endwhile
    
    jika tidak ditemukan maka
        output("Pasien dengan ID ", id_edit, " tidak ditemukan.")
    endif

[Fungsi-fungsi lainnya tetap sama dengan format yang diberikan, disesuaikan dengan penggunaan array statis dan counter jumlah data]

endprogram
